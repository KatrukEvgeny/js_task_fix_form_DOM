{"version":3,"sources":["scripts/main.js"],"names":["blocks","document","querySelectorAll","arrBlock","el","newName","firstElementChild","name","type","id","namePlaceholder","toUpperCase","slice","innerHTML"],"mappings":";AAAA,aAkBC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAfD,IAeC,EAfKA,EAASC,SAASC,iBAAiB,UAEnCC,EAAeH,EAAAA,GAEJG,EAAAA,EAAAA,GAWhB,IAX0B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAhBC,IAAAA,EAAgB,EAAA,MACnBC,EAAUD,EAAGE,kBAAkBC,KAC/BC,EAAOJ,EAAGE,kBAAkBE,KAC5BC,EAAKL,EAAGE,kBAAkBG,GAC1BC,EAAkBL,EAAQ,GAAGM,cAAgBN,EAAQO,MAAM,GAEjER,EAAGS,UACiCJ,yCAAAA,OAAAA,EAAOJ,MAAAA,OAAAA,EAC1BG,+BAAAA,OAAAA,EAAeH,YAAAA,OAAAA,EACLI,kCAAAA,OAAAA,EAAoBC,mBAAAA,OAAAA,EAH/C,+BAKD,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.74aeebec.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst blocks = document.querySelectorAll('.field');\n\nconst arrBlock = [...blocks];\n\nfor (const el of arrBlock) {\n  const newName = el.firstElementChild.name;\n  const type = el.firstElementChild.type;\n  const id = el.firstElementChild.id;\n  const namePlaceholder = newName[0].toUpperCase() + newName.slice(1);\n\n  el.innerHTML = `\n    <label class=\"field-label\" for=\"${id}\">${newName}</label>\n    <input type=\"${type}\" name=\"${newName}\"\n    class=\"field-text\" id=\"${id}\" placeholder=\"${namePlaceholder}\"\n    autocomplete=\"off\">`;\n};\n"]}